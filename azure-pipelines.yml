# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build
  jobs:  
  - job: Build_Docker_Image
    displayName: Build Docker Image
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'key.json'

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'localhost.pfx'

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'mangoidentity.pfx'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '**'
        TargetFolder: '$(Build.SourcesDirectory)/MangoAccountSystem'

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/MangoAccountSystem/Dockerfile'
        tags: |
          $(tag)
    
    - task: Docker@2
      displayName: Docker Push
      inputs:
        containerRegistry: 'aliyunDockerHub'
        repository: 'chiva_mg_namespace/chiva_mg_repository'

  - job: Build_dotnet2_2
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      buildConfiguration: 'Release'

    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(Build.SourcesDirectory)/MangoAccountSystem/MangoAccountSystem.csproj $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'Test/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'UserSystemRelease'
        publishLocation: 'Container'
